openapi: 3.0.0
info:
  title: Comprehensive App Data Model
  description: API for managing users, organisations, authentication, payments, and additional features.
  version: 1.0.0

servers:
  - url: https://api.yourapp.com
    description: Production server

paths:
  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{id}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

  /organisations:
    get:
      summary: Get all organisations
      tags:
        - Organisations
      responses:
        "200":
          description: A list of organisations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organisation"
    post:
      summary: Create a new organisation
      tags:
        - Organisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organisation"
      responses:
        "201":
          description: Organisation created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"

  /organisations/{id}:
    get:
      summary: Get an organisation by ID
      tags:
        - Organisations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single organisation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
        "404":
          description: Organisation not found

  /authentications:
    post:
      summary: Authenticate a user
      tags:
        - Authentications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Authentication"
      responses:
        "200":
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
        "401":
          description: Invalid credentials

  /payments:
    get:
      summary: Get all payments
      tags:
        - Payments
      responses:
        "200":
          description: A list of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
    post:
      summary: Create a new payment
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "201":
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"

  /profiles:
    get:
      summary: Get all profiles
      tags:
        - Profiles
      responses:
        "200":
          description: A list of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Profile"
    post:
      summary: Create a new profile
      tags:
        - Profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        "201":
          description: Profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"

  /profiles/{id}:
    get:
      summary: Get a profile by ID
      tags:
        - Profiles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "404":
          description: Profile not found

  /gdpr-cookies:
    get:
      summary: Get all GDPR cookies
      tags:
        - GDPRCookies
      responses:
        "200":
          description: A list of GDPR cookies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GDPRCookie"
    post:
      summary: Create a new GDPR cookie
      tags:
        - GDPRCookies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GDPRCookie"
      responses:
        "201":
          description: GDPR cookie created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GDPRCookie"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        created_at:
          type: string
          format: date-time

    Organisation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time

    Authentication:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string

    Payment:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        organisation_id:
          type: string
        amount:
          type: number
        method:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    Profile:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        avatar:
          type: string
        bio:
          type: string
        created_at:
          type: string
          format: date-time

    GDPRCookie:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
